{"version":3,"file":"static/js/602.cf1fa47e.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MoviesSearchForm/MoviesSearchForm.styled.jsx","components/MoviesSearchForm/MoviesSearchForm.jsx","components/SearchMoviesList/SearchMovieList.styled.jsx","components/SearchMoviesList/SearchMoviesList.jsx","pages/Movies/MoviesPage.jsx","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;","import { Oval } from 'react-loader-spinner';\nimport { Container } from './Loader.styled';\n\n\nexport const Loader = () => {\n    return (\n        <Container>\n            <Oval\n                height={80}\n                width={80}\n                color=\"#1a526c\"\n                wrapperStyle={{}}\n                wrapperClass=\"\"\n                visible={true}\n                ariaLabel='oval-loading'\n                secondaryColor=\"#1a526c\"\n                strokeWidth={2}\n                strokeWidthSecondary={2}\n            />\n        </Container>\n    )\n}\n","import styled from \"styled-components\";\nimport { HiSearch } from \"react-icons/hi\";\n\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n  outline: none;\n  border-color: #1a526c;\n`;\n\nexport const BtnSearch = styled.button`\n  display: inline-block;\n  position: relative;\n  width: 38px;\n  height: 38px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  border-radius: 4%;\n  cursor: pointer;\n  outline: none;\n  background-color: transparent;\n\n  &:hover{\n    background-color: #fffff;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 30px;\n  height: 30px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin-right: -50%;\n  transform: translate(-50%, -50%);\n  fill:  #1a526c;\n`;","import PropTypes from 'prop-types';\nimport { useState } from \"react\";\nimport { Form, Input, BtnSearch, Icon} from './MoviesSearchForm.styled';\n\nexport const MoviesSearchForm = ({ onSubmit }) => {\n\n    const [searchQuery, setSearchQuery] = useState('');\n\n    const handleChange = e => setSearchQuery(e.currentTarget.value.toLowerCase());  \n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        if (searchQuery.trim() === '') {\n          alert('Opps...Try again!');\n          return;\n        }\n\n        onSubmit(searchQuery);\n        setSearchQuery('');\n    }\n    \n    return (\n        <Form onSubmit={handleSubmit}>\n            <Input\n                className=\"input\"\n                type=\"text\"\n                autoComplete=\"off\"\n                autoFocus\n                placeholder=\"Search movie\"\n                onChange={handleChange}\n                value={searchQuery}\n            />\n            <BtnSearch type=\"submit\">\n                <Icon />\n            </BtnSearch>\n        </Form>\n    )\n}\n\n\nMoviesSearchForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}","import styled from \"styled-components\";\nimport { Link} from 'react-router-dom';\n\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 20px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const LinkItem = styled(Link)`\n  text-align: center;\n  \n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 10px;\n  box-shadow: 0 2px 4px rgba(26, 82, 108, 1);\n  background-color: #1a526c30;\n  transition: transform 0.25s;\n\n  :hover{\n    transform: scale(1.02);\n  }\n`;\n\nexport const Title = styled.h3`\n  text-align: center;\n  text-decoration: none;\n  color: black;\n`;","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { List, Item, Title, LinkItem } from './SearchMovieList.styled';\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500/';\n\nexport const SearchMoviesList = ({ movies }) => {\n\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(({ title, id, backdrop_path }) => (\n        <Item key={id}>\n          <LinkItem state={{ from: location }} to={`/movies/${id}`}>\n            {backdrop_path ? (\n              <img src={`${IMG_URL}${backdrop_path}`} alt=\"\" width={250} />\n                ) : (\n              <img src='https://www.svgrepo.com/show/91111/avatar-profile.svg' alt={title} width={140} />\n                )}\n            <Title>{title}</Title>\n          </LinkItem>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nSearchMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n","import { MoviesSearchForm } from \"components/MoviesSearchForm/MoviesSearchForm\";\nimport { SearchMoviesList } from \"components/SearchMoviesList/SearchMoviesList\";\nimport { useState, useEffect } from \"react\";\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchMovie } from 'services/api';\nimport { Loader } from 'components/Loader/Loader';\n\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n} \n\nconst MoviesPage = () => {\n    const [movies, setMovies] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [status, setStatus] = useState(Status.IDLE);\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    const query = searchParams.get('query') ?? '';\n\n\n    useEffect(() => {\n        const fetchQueryMovie = async () => {\n            setLoading(true);\n\n            try {\n                setStatus(Status.PENDING);\n                const data = await getSearchMovie(query);\n                setStatus(Status.RESOLVED);\n                setMovies(data.results)\n            \n            } catch (error) {\n                console.log(error);\n                setStatus(Status.REJECTED);\n            }\n        }\n        if (query) {\n            fetchQueryMovie();\n        };\n    },[query])\n    \n    const onFormSubmit = (searchQuery) => {\n        setSearchParams({query: searchQuery });\n        setMovies([]);\n      }\n\n    return (\n        <div>\n            {status === Status.PENDING && loading && <Loader />}\n            {status === Status.REJECTED && <p>Oops, something went wrong... Reload the page</p>}\n\n            <MoviesSearchForm  onSubmit={onFormSubmit} />\n            {movies && <SearchMoviesList movies={movies} />}\n        </div>\n    )\n}\n\nexport default MoviesPage;","import axios from \"axios\";\n\nconst API_KEY = '688b72699ca330044e2cd0625f24cfe3';\nconst BASE_URL = 'https://api.themoviedb.org/3/'\n\nexport const getTrendingMovie = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getSearchMovie = async (query) => {\n    const response = await axios.get(\n        `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data;\n}\n\nexport const getMovieDetails = async (id) => {\n    const response = await axios.get(\n        `${BASE_URL}movie/${id}?api_key=${API_KEY}`\n    );\n    return response.data;\n}\n\nexport const getMovieCast = async (id) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport const getMovieReviews = async (id) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return response;\n}\n"],"names":["Container","styled","Loader","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","Form","Input","BtnSearch","Icon","HiSearch","MoviesSearchForm","onSubmit","useState","searchQuery","setSearchQuery","e","preventDefault","trim","alert","className","type","autoComplete","autoFocus","placeholder","onChange","currentTarget","value","toLowerCase","List","LinkItem","Link","Item","Title","SearchMoviesList","movies","location","useLocation","map","title","id","backdrop_path","state","from","to","src","alt","Status","setMovies","loading","setLoading","status","setStatus","useSearchParams","searchParams","setSearchParams","query","get","useEffect","fetchQueryMovie","getSearchMovie","data","results","console","log","API_KEY","BASE_URL","getTrendingMovie","axios","response","getMovieDetails","getMovieCast","getMovieReviews"],"sourceRoot":""}