{"version":3,"file":"static/js/249.0bd5a1fc.chunk.js","mappings":"gRAEaA,EAAWC,EAAAA,GAAAA,IAAH,0RAcRC,EAAcD,EAAAA,GAAAA,GAAH,qGAOXE,EAAUF,EAAAA,GAAAA,IAAH,6EAMPG,EAAOH,EAAAA,GAAAA,EAAH,2F,SC1BJI,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAKvB,OAAOA,EAAKC,KAAI,YAAoD,IAAlDC,EAAiD,EAAjDA,GAAIC,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAC/C,OACI,UAACT,EAAD,WACKO,GACG,SAACN,EAAD,CAASS,IAAG,UAPZ,oCAOY,OAAeH,GAAgBI,IAAKH,KAE5C,gBAAKE,IAAI,wDAAwDC,IAAKH,EAAeI,MAAO,OAEpG,SAACV,EAAD,UAAOM,KACP,UAACN,EAAD,yBAAkBO,OAPJH,EAUzB,GACJ,E,SC6BD,EAxCa,WACT,OAAwBO,EAAAA,EAAAA,UAAS,MAAjC,eAAOT,EAAP,KAAaU,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,QAArC,eAAOE,EAAP,KAAeC,EAAf,KAEQV,GAAOW,EAAAA,EAAAA,MAAPX,GAyBV,OAvBEY,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAG,uFACTb,EADS,iEAKlBU,EAAU,WALQ,UAMCI,EAAAA,EAAAA,IAAad,GANd,OAMZe,EANY,OAOlBL,EAAU,WACVF,EAAQO,GARU,kDAUlBC,QAAQC,IAAR,MACAP,EAAU,YAXQ,sGAAH,qDAgBnBG,GACC,GAAE,CAACb,IAEJgB,QAAQC,IAAInB,IAIZ,gCACgB,YAAXW,IAAwB,SAACS,EAAA,EAAD,KACzB,SAAC1B,EAAD,UACKM,IAAQ,SAACD,EAAD,CAAUC,KAAMA,EAAKA,WAKzC,C,8EC9CYqB,E,OAAY1B,GAAAA,IAAH,6E,SCETyB,EAAS,WAClB,OACI,SAACC,EAAD,WACA,SAAC,KAAD,CACIC,OAAQ,GACRd,MAAO,GACPe,MAAM,UACNC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,EACTC,UAAU,eACVC,eAAe,UACfC,YAAa,EACbC,qBAAsB,KAIjC,C,8LCnBKC,EAAU,mCACVC,EAAW,gCAEJC,EAAgB,mCAAG,oGACPC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,sCACoBD,IAFb,cACxBI,EADwB,yBAIvBA,EAASlB,MAJc,2CAAH,qDAOhBmB,EAAc,mCAAG,WAAOC,GAAP,uFACHH,EAAAA,EAAAA,IAAA,UAChBF,EADgB,gCACgBD,EADhB,kBACiCM,IAF9B,cACpBF,EADoB,yBAInBA,EAASlB,MAJU,2CAAH,sDAOdqB,EAAe,mCAAG,WAAOpC,GAAP,uFACJgC,EAAAA,EAAAA,IAAA,UAChBF,EADgB,iBACC9B,EADD,oBACe6B,IAFX,cACrBI,EADqB,yBAIpBA,EAASlB,MAJW,2CAAH,sDAOfD,EAAY,mCAAG,WAAOd,GAAP,uFACHgC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACD9B,EADC,4BACqB6B,IAFlB,cACpBI,EADoB,yBAInBA,EAASlB,MAJU,2CAAH,sDAOZsB,EAAe,mCAAG,WAAOrC,GAAP,uFACNgC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACD9B,EADC,4BACqB6B,IAFf,cACvBI,EADuB,yBAItBA,GAJsB,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/CastItem.jsx","components/Cast/Cast.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const CastList = styled.div`\ndisplay: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n  \n`;\n\nexport const CardWrapper = styled.li`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n`;\n\nexport const CastImg = styled.img`\n  display: block;\n  width: 250px;\n  height: auto;\n`;\n\nexport const Text = styled.p`\n font-weight: 500;\n  margin-bottom: 5px;\n  margin-top: 8px;\n  \n`;","import PropTypes from 'prop-types';\nimport { CardWrapper, CastImg, Text} from './Cast.styled';\n\nexport const CastItem = ({ cast }) => {\n\n    const IMG_URL = 'https://image.tmdb.org/t/p/w500/';\n\n\n    return cast.map(({id, profile_path, original_name, character }) => {\n        return (\n            <CardWrapper key={id}>\n                {profile_path ? (\n                    <CastImg src={`${IMG_URL}${profile_path}`} alt={original_name} />\n                ) : (\n                        <img src='https://www.svgrepo.com/show/91111/avatar-profile.svg' alt={original_name} width={250} />\n                )}\n                <Text>{original_name}</Text>\n                <Text>Character: {character}</Text>\n            </CardWrapper>\n        );\n    })\n}\n\nCastItem.propTypes = {\n    cast: PropTypes.arrayOf(PropTypes.object).isRequired,\n}","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { getMovieCast } from 'services/api';\nimport { CastItem } from './CastItem';\nimport { Loader } from 'components/Loader/Loader';\nimport { CastList } from './Cast.styled';\n\n\n\nconst Cast = () => {\n    const [cast, setCast] = useState(null);\n    const [status, setStatus] = useState('idle');\n\n    const { id } = useParams();\n\n    useEffect(() => {\n        const fetchCast = async () => {\n            if (!id) {\n        return;\n      }\n      try {\n        setStatus('pending')\n        const data = await getMovieCast(id);\n        setStatus('resolve');\n        setCast(data);\n      } catch (error) {\n        console.log(error);\n        setStatus('rejected');\n\n      } finally {\n      }\n    };\n    fetchCast();\n    }, [id])\n\n    console.log(cast);\n    \n\n  return (\n    <>\n        {status === 'pending' && <Loader />}\n        <CastList>\n            {cast && <CastItem cast={cast.cast}/>}\n      </CastList>\n    </>\n    )\n    \n};\n\nexport default Cast;\n\n    ","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  \n \n`;","import { Oval } from 'react-loader-spinner';\nimport { Container } from './Loader.styled';\n\n\nexport const Loader = () => {\n    return (\n        <Container>\n        <Oval\n            height={80}\n            width={80}\n            color=\"#1a526c\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n            ariaLabel='oval-loading'\n            secondaryColor=\"#1a526c\"\n            strokeWidth={2}\n            strokeWidthSecondary={2}\n/>\n            </Container>\n    )\n}\n","import axios from \"axios\";\n\nconst API_KEY = '688b72699ca330044e2cd0625f24cfe3';\nconst BASE_URL = 'https://api.themoviedb.org/3/'\n\nexport const getTrendingMovie = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getSearchMovie = async (query) => {\n    const response = await axios.get(\n        `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data;\n}\n\nexport const getMovieDetails = async (id) => {\n    const response = await axios.get(\n        `${BASE_URL}movie/${id}?api_key=${API_KEY}`\n    );\n    return response.data;\n}\n\nexport const getMovieCast = async (id) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport const getMovieReviews = async (id) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return response;\n}\n"],"names":["CastList","styled","CardWrapper","CastImg","Text","CastItem","cast","map","id","profile_path","original_name","character","src","alt","width","useState","setCast","status","setStatus","useParams","useEffect","fetchCast","getMovieCast","data","console","log","Loader","Container","height","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","API_KEY","BASE_URL","getTrendingMovie","axios","response","getSearchMovie","query","getMovieDetails","getMovieReviews"],"sourceRoot":""}