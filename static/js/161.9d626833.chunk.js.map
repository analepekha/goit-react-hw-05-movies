{"version":3,"file":"static/js/161.9d626833.chunk.js","mappings":"8LAEaA,E,OAAYC,GAAAA,IAAH,6E,SCETC,EAAS,WAClB,OACI,SAACF,EAAD,WACA,SAAC,KAAD,CACIG,OAAQ,GACRC,MAAO,GACPC,MAAM,UACNC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,EACTC,UAAU,eACVC,eAAe,UACfC,YAAa,EACbC,qBAAsB,KAIjC,C,+IClBYC,EAAmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACV,yBACE,SAAC,KAAD,CAAMC,MAAO,CAACC,KAAMN,GAAWO,GAAE,kBAAaH,GAA9C,SAAqDD,KAD9CC,EADC,KAOjB,E,kBCTKI,EACE,OADFA,EAEK,UAFLA,EAGM,WAHNA,EAIM,WAuCZ,EApCiB,WACb,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA4BJ,EAAAA,EAAAA,UAASD,GAArC,eAAOM,EAAP,KAAeC,EAAf,KAsBA,OAnBAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,mCAAG,2FAChBJ,GAAW,GADK,SAGZE,EAAUP,GAHE,UAIOU,EAAAA,EAAAA,MAJP,OAINC,EAJM,OAKZC,QAAQC,IAAIF,EAAKG,SACjBP,EAAUP,GACVG,EAAgBQ,EAAKG,SAPT,kDASZF,QAAQC,IAAR,MACAN,EAAUP,GAVE,yBAYZK,GAAW,GAZC,6EAAH,qDAejBI,GACH,GAAC,CAACN,KAGC,gCACKG,IAAWN,GAAkBI,IAAW,SAACzB,EAAA,EAAD,IACxC2B,IAAWN,IAAmB,0EAC/B,4CACCE,IAAgB,SAACZ,EAAD,CAAkBC,OAAQW,MAItD,C,8LC5CKa,EAAU,mCACVC,EAAW,gCAEJN,EAAgB,mCAAG,oGACPO,EAAAA,EAAAA,IAAA,UAClBD,EADkB,sCACoBD,IAFb,cACxBG,EADwB,yBAIvBA,EAASP,MAJc,2CAAH,qDAOhBQ,EAAc,mCAAG,WAAOC,GAAP,uFACHH,EAAAA,EAAAA,IAAA,UAChBD,EADgB,gCACgBD,EADhB,kBACiCK,IAF9B,cACpBF,EADoB,yBAInBA,EAASP,MAJU,2CAAH,sDAOdU,EAAe,mCAAG,WAAOzB,GAAP,uFACJqB,EAAAA,EAAAA,IAAA,UAChBD,EADgB,iBACCpB,EADD,oBACemB,IAFX,cACrBG,EADqB,yBAIpBA,EAASP,MAJW,2CAAH,sDAOfW,EAAY,mCAAG,WAAO1B,GAAP,uFACHqB,EAAAA,EAAAA,IAAA,UAClBD,EADkB,iBACDpB,EADC,4BACqBmB,IAFlB,cACpBG,EADoB,yBAInBA,EAASP,MAJU,2CAAH,sDAOZY,EAAe,mCAAG,WAAO3B,GAAP,uFACNqB,EAAAA,EAAAA,IAAA,UAClBD,EADkB,iBACDpB,EADC,4BACqBmB,IAFf,cACvBG,EADuB,yBAItBA,GAJsB,2CAAH,qD","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/TrendyMoviesList/TrendyMoviesList.jsx","pages/HomePage/HomePage.jsx","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  \n \n`;","import { Oval } from 'react-loader-spinner';\nimport { Container } from './Loader.styled';\n\n\nexport const Loader = () => {\n    return (\n        <Container>\n        <Oval\n            height={80}\n            width={80}\n            color=\"#1a526c\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n            ariaLabel='oval-loading'\n            secondaryColor=\"#1a526c\"\n            strokeWidth={2}\n            strokeWidthSecondary={2}\n/>\n            </Container>\n    )\n}\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const TrendyMoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ title, id }) => (\n        <li key={id}>\n          <Link state={{from: location}} to={`/movies/${id}`}>{title}</Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nTrendyMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\n","import { Loader } from 'components/Loader/Loader';\nimport { TrendyMoviesList } from 'components/TrendyMoviesList/TrendyMoviesList';\nimport { useState, useEffect } from 'react';\nimport { getTrendingMovie } from 'services/api';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n}\n\nconst HomePage = () => {\n    const [trendyMovies, setTrendyMovies] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [status, setStatus] = useState(Status.IDLE);\n    // const [page, setPage] = useState(1);\n\n    useEffect(() => {\n        const fetchMovies = async () => {\n            setLoading(true);\n            try {\n                setStatus(Status.PENDING);\n                const data = await getTrendingMovie();\n                console.log(data.results);\n                setStatus(Status.RESOLVED);\n                setTrendyMovies(data.results)\n            } catch (error) {\n                console.log(error);\n                setStatus(Status.REJECTED);\n            } finally {\n                setLoading(false);\n      }\n        }\n        fetchMovies();\n    },[setTrendyMovies])\n\n    return (\n        <>\n            {status === Status.PENDING && loading && <Loader />}\n            {status === Status.REJECTED && <p>Oops, something went wrong... Reload the page</p>}\n            <h2>Trending Movies</h2>\n            {trendyMovies && <TrendyMoviesList movies={trendyMovies}/>} \n        </>\n    )\n\n}\n\nexport default HomePage;\n\n","import axios from \"axios\";\n\nconst API_KEY = '688b72699ca330044e2cd0625f24cfe3';\nconst BASE_URL = 'https://api.themoviedb.org/3/'\n\nexport const getTrendingMovie = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getSearchMovie = async (query) => {\n    const response = await axios.get(\n        `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data;\n}\n\nexport const getMovieDetails = async (id) => {\n    const response = await axios.get(\n        `${BASE_URL}movie/${id}?api_key=${API_KEY}`\n    );\n    return response.data;\n}\n\nexport const getMovieCast = async (id) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport const getMovieReviews = async (id) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return response;\n}\n"],"names":["Container","styled","Loader","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","TrendyMoviesList","movies","location","useLocation","map","title","id","state","from","to","Status","useState","trendyMovies","setTrendyMovies","loading","setLoading","status","setStatus","useEffect","fetchMovies","getTrendingMovie","data","console","log","results","API_KEY","BASE_URL","axios","response","getSearchMovie","query","getMovieDetails","getMovieCast","getMovieReviews"],"sourceRoot":""}