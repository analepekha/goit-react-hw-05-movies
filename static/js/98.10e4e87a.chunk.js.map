{"version":3,"file":"static/js/98.10e4e87a.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MoviesSearchForm/MoviesSearchForm.styled.jsx","components/MoviesSearchForm/MoviesSearchForm.jsx","components/SearchMoviesList/SearchMoviesList.jsx","pages/Movies/MoviesPage.jsx","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  \n \n`;","import { Oval } from 'react-loader-spinner';\nimport { Container } from './Loader.styled';\n\n\nexport const Loader = () => {\n    return (\n        <Container>\n        <Oval\n            height={80}\n            width={80}\n            color=\"#1a526c\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n            ariaLabel='oval-loading'\n            secondaryColor=\"#1a526c\"\n            strokeWidth={2}\n            strokeWidthSecondary={2}\n/>\n            </Container>\n    )\n}\n","import styled from \"styled-components\";\nimport { HiSearch } from \"react-icons/hi\";\n\n\nexport const Form = styled.form`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n   outline: none;\n\n\n    border-color: #1a526c;\n  \n`;\n\nexport const BtnSearch = styled.button`\n  display: inline-block;\n  position: relative;\n  width: 38px;\n  height: 38px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  border-radius: 4%;\n  // opacity: 0.6;\n  // transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\nbackground-color: transparent;\n\n  &:hover{\n    background-color: #fffff;\n`;\n\n// export const LabelSearch = styled.span`\n//   position: absolute;\n//   width: 1px;\n//   height: 1px;\n//   padding: 0;\n//   overflow: hidden;\n//   clip: rect(0, 0, 0, 0);\n//   white-space: nowrap;\n//   clip-path: inset(50%);\n//   border: 0;\n// `;\n\n\nexport const Icon = styled(HiSearch)`\n  width: 30px;\n  height: 30px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin-right: -50%;\n  transform: translate(-50%, -50%);\n  fill:  #1a526c;\n\n  \n`;","import PropTypes from 'prop-types';\nimport { useState } from \"react\";\nimport { Form, Input, BtnSearch, Icon} from './MoviesSearchForm.styled';\n\nexport const MoviesSearchForm = ({ onSubmit }) => {\n    const [searchQuery, setSearchQuery] = useState('');\n\n    const handleChange = e => setSearchQuery(e.currentTarget.value.toLowerCase());  \n\n    const handleSubmit = e => {\n    e.preventDefault();\n\n    if (searchQuery.trim() === '') {\n      alert('Opps...Try again!');\n      return;\n    }\n\n    onSubmit(searchQuery);\n    setSearchQuery('');\n    }\n    \n    return (\n        <Form onSubmit={handleSubmit}>\n                <Input\n                    className=\"input\"\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    autoFocus\n                    placeholder=\"Search movie\"\n                    onChange={handleChange}\n                    value={searchQuery}\n                />\n            <BtnSearch type=\"submit\">\n                <Icon />\n                {/* <LabelSearch></LabelSearch> */}\n            </BtnSearch>\n        </Form>\n    )\n}\n\n\nMoviesSearchForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const SearchMoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ title, id }) => (\n        <li key={id}>\n          <Link state={{from: location}} to={`/movies/${id}`}>{title}</Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nSearchMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n","import { MoviesSearchForm } from \"components/MoviesSearchForm/MoviesSearchForm\";\nimport { SearchMoviesList } from \"components/SearchMoviesList/SearchMoviesList\";\nimport { useState, useEffect } from \"react\";\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchMovie } from 'services/api';\nimport { Loader } from 'components/Loader/Loader';\n\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n} \n\nconst MoviesPage = () => {\n    const [movies, setMovies] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [status, setStatus] = useState(Status.IDLE);\n\n    // const [searchQuery, setSearchQuery] = useState('');\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query') ?? '';\n\n\n    useEffect(() => {\n        const fetchQueryMovie = async () => {\n                        setLoading(true);\n\n            try {\n                setStatus(Status.PENDING);\n\n                const data = await getSearchMovie(query);\n                console.log(data);\n                setStatus(Status.RESOLVED);\n                setMovies(data.results)\n            \n            } catch (error) {\n                console.log(error);\n                setStatus(Status.REJECTED);\n            }\n        }\n        if (query) {\n            fetchQueryMovie()\n        };\n    },[query])\n    \n    const onFormSubmit = (searchQuery) => {\n        // if (searchQuery === this.state.searchQuery) {\n        //   toast.error('Oops... Something went wrong, repeat your query!')\n        // }\n        setSearchParams({query: searchQuery });\n        setMovies([]);\n      }\n\n    return (\n        <div>\n            {status === Status.PENDING && loading && <Loader />}\n            {status === Status.REJECTED && <p>Oops, something went wrong... Reload the page</p>}\n\n            <MoviesSearchForm  onSubmit={onFormSubmit} />\n            {movies && <SearchMoviesList movies={movies} />}\n        </div>\n    )\n}\n\nexport default MoviesPage;","import axios from \"axios\";\n\nconst API_KEY = '688b72699ca330044e2cd0625f24cfe3';\nconst BASE_URL = 'https://api.themoviedb.org/3/'\n\nexport const getTrendingMovie = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getSearchMovie = async (query) => {\n    const response = await axios.get(\n        `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data;\n}\n\nexport const getMovieDetails = async (id) => {\n    const response = await axios.get(\n        `${BASE_URL}movie/${id}?api_key=${API_KEY}`\n    );\n    return response.data;\n}\n\nexport const getMovieCast = async (id) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport const getMovieReviews = async (id) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return response;\n}\n"],"names":["Container","styled","Loader","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","Form","Input","BtnSearch","Icon","HiSearch","MoviesSearchForm","onSubmit","useState","searchQuery","setSearchQuery","e","preventDefault","trim","alert","className","type","autoComplete","autoFocus","placeholder","onChange","currentTarget","value","toLowerCase","SearchMoviesList","movies","location","useLocation","map","title","id","state","from","to","Status","setMovies","loading","setLoading","status","setStatus","useSearchParams","searchParams","setSearchParams","query","get","useEffect","fetchQueryMovie","getSearchMovie","data","console","log","results","API_KEY","BASE_URL","getTrendingMovie","axios","response","getMovieDetails","getMovieCast","getMovieReviews"],"sourceRoot":""}