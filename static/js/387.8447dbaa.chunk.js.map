{"version":3,"file":"static/js/387.8447dbaa.chunk.js","mappings":"8LAEaA,E,OAAYC,GAAAA,IAAH,sE,SCETC,EAAS,WAClB,OACI,SAACF,EAAD,WACI,SAAC,KAAD,CACIG,OAAQ,GACRC,MAAO,GACPC,MAAM,UACNC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,EACTC,UAAU,eACVC,eAAe,UACfC,YAAa,EACbC,qBAAsB,KAIrC,C,uKCnBYC,EAAeZ,EAAAA,GAAAA,GAAJ,+CAIXa,EAAab,EAAAA,GAAAA,GAAH,mHAMVc,EAAQd,EAAAA,GAAAA,GAAH,gD,SC+ClB,EAnDgB,WACZ,IAAQe,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KA0BF,OAtBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,yFACnBF,GAAW,GACNR,EAFc,iEAOfM,EAAU,WAPK,UAQQK,EAAAA,EAAAA,IAAgBX,GARxB,gBAQPY,EARO,EAQPA,KACRN,EAAU,WACVF,EAAWQ,EAAKC,SAVD,kDAYfC,QAAQC,IAAR,MACAT,EAAU,YAbK,yBAejBE,GAAW,GAfM,6EAAH,qDAkBlBE,GACC,GAAE,CAACV,KAGJ,gCACc,YAAXK,GAAwBE,IAAW,SAACrB,EAAA,EAAD,IAChB,IAAnBiB,EAAQa,QACP,wBACGb,EAAQc,KAAI,YAA8B,IAA3BjB,EAA0B,EAA1BA,GAAIkB,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,UAACrB,EAAD,YACE,UAACC,EAAD,sBAAgBmB,MAChB,uBAAIC,MAFWnB,EAKpB,OAGH,SAACH,EAAD,0DAIP,C,8LCvDKuB,EAAU,mCACVC,EAAW,gCAEJC,EAAgB,mCAAG,oGACPC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,sCACoBD,IAFb,cACxBI,EADwB,yBAIvBA,EAASZ,MAJc,2CAAH,qDAOhBa,EAAc,mCAAG,WAAOC,GAAP,uFACHH,EAAAA,EAAAA,IAAA,UAChBF,EADgB,gCACgBD,EADhB,kBACiCM,IAF9B,cACpBF,EADoB,yBAInBA,EAASZ,MAJU,2CAAH,sDAOde,EAAe,mCAAG,WAAO3B,GAAP,uFACJuB,EAAAA,EAAAA,IAAA,UAChBF,EADgB,iBACCrB,EADD,oBACeoB,IAFX,cACrBI,EADqB,yBAIpBA,EAASZ,MAJW,2CAAH,sDAOfgB,EAAY,mCAAG,WAAO5B,GAAP,uFACHuB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDrB,EADC,4BACqBoB,IAFlB,cACpBI,EADoB,yBAInBA,EAASZ,MAJU,2CAAH,sDAOZD,EAAe,mCAAG,WAAOX,GAAP,uFACNuB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDrB,EADC,4BACqBoB,IAFf,cACvBI,EADuB,yBAItBA,GAJsB,2CAAH,qD","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;","import { Oval } from 'react-loader-spinner';\nimport { Container } from './Loader.styled';\n\n\nexport const Loader = () => {\n    return (\n        <Container>\n            <Oval\n                height={80}\n                width={80}\n                color=\"#1a526c\"\n                wrapperStyle={{}}\n                wrapperClass=\"\"\n                visible={true}\n                ariaLabel='oval-loading'\n                secondaryColor=\"#1a526c\"\n                strokeWidth={2}\n                strokeWidthSecondary={2}\n            />\n        </Container>\n    )\n}\n","import styled from \"styled-components\";\n\nexport const DefaultText  = styled.h4`\n  text-align: center;\n`;\n\nexport const ReviewItem = styled.li`\n  padding: 10px;\n  margin-bottom: 15px;\n  box-shadow: 0 1px 2px rgba(26, 82, 108, .25);\n`;\n\nexport const Title = styled.h4`\n  margin-bottom: 10px;\n`;","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { getMovieReviews } from 'services/api';\nimport { Loader } from 'components/Loader/Loader';\nimport { DefaultText, ReviewItem, Title } from './Reviews.styled';\n\n\nconst Reviews = () => {\n    const { id } = useParams();\n    const [reviews, setReviews] = useState([]);\n    const [status, setStatus] = useState('idle');\n    const [loading, setLoading] = useState(false);\n\n\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      setLoading(true);\n      if (!id) {\n        return;\n      }\n          \n      try {\n          setStatus('pending')\n          const { data } = await getMovieReviews(id);\n          setStatus('resolve');\n          setReviews(data.results);\n      } catch (error) {\n          console.log(error);\n          setStatus('rejected');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchReviews();\n    }, [id])\n  \n  return (\n    <>\n      {status === 'pending' && loading && <Loader />}\n      {reviews.length !== 0 ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => {\n            return (\n              <ReviewItem key={id}>\n                <Title>Author: {author}</Title>\n                <p>{content}</p>\n              </ReviewItem>\n            );\n          })}\n        </ul>\n      ) : (\n        <DefaultText>We don't have any reviews for this movie.</DefaultText>\n      )}\n    </>\n  );\n};\n  \nexport default Reviews;\n\n","import axios from \"axios\";\n\nconst API_KEY = '688b72699ca330044e2cd0625f24cfe3';\nconst BASE_URL = 'https://api.themoviedb.org/3/'\n\nexport const getTrendingMovie = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getSearchMovie = async (query) => {\n    const response = await axios.get(\n        `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data;\n}\n\nexport const getMovieDetails = async (id) => {\n    const response = await axios.get(\n        `${BASE_URL}movie/${id}?api_key=${API_KEY}`\n    );\n    return response.data;\n}\n\nexport const getMovieCast = async (id) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport const getMovieReviews = async (id) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return response;\n}\n"],"names":["Container","styled","Loader","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","DefaultText","ReviewItem","Title","id","useParams","useState","reviews","setReviews","status","setStatus","loading","setLoading","useEffect","fetchReviews","getMovieReviews","data","results","console","log","length","map","author","content","API_KEY","BASE_URL","getTrendingMovie","axios","response","getSearchMovie","query","getMovieDetails","getMovieCast"],"sourceRoot":""}